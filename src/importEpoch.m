function epoch = importEpoch(group, params, data, epochDescriptor)
    import ovation.*;
    
    protocolParams = params.epochGroup.protocol;
    protocolParams.wheelDirectionChoice = data.Laps.whlDirChoice(epochDescriptor.trialNumber);
    
    epoch = group.insertEpoch(group.getStartTime().plusSeconds(epochDescriptor.startTimeSeconds),...
        group.getStartTime().plusSeconds(epochDescriptor.endTimeSeconds),...
        ['org.hhmi.pastalkova.' char(group.getLabel())],...
        struct2map(protocolParams));
    
    
    
    % LFP Response
    lfpDeviceParameters = struct();
    epoch.insertResponse(group.getExperiment().externalDevice('Recording System', params.device.RecSyst.manufacturer),...
        struct2map(lfpDeviceParameters),...
        NumericData(data.Track.eeg(epochDescriptor.lfpStartIndex:epochDescriptor.lfpEndIndex)),...
        'mV',... % TODO units
        'LFP',...
        data.xml.lfpSampleRate,...
        'Hz',...
        IResponseData.NUMERIC_DATA_UTI);
    
    % Arduino Responses
    epoch.insertResponse(group.getExperiment().externalDevice('Direction Choice', params.device.maze.manufacturer),...
        struct2map(struct()),...
        NumericData(data.Laps.dirChoice(epochDescriptor.trialNumber)),...
        'n/a',... % TODO units
        'choice',...
        1,...
        '1/trial',...
        IResponseData.NUMERIC_DATA_UTI);
    
    if(data.Laps.corrChoice(epochDescriptor.trialNumber))
        epoch.addTag('correct');
    end
    
    % Tracking Response
    params.device.tracking.manufacturer = 'Pastalkova'; % TODO
    trackerParameters = struct(); %TODO
    epoch.insertResponse(group.getExperiment().getExternalDevice('Tracking xPix', params.device.tracking.manufacturer),...
        struct2map(trackerParameters),...
        NumericData(data.Track.xPix(epochDescriptor.lfpStartIndex:epochDescriptor.lfpEndIndex)),...
        'pixel',... % TODO units
        'x-position',...
        data.xml.lfpSampleRate,...
        'Hz',...
        IResponseData.NUMERIC_DATA_UTI);
    
    epoch.insertResponse(group.getExperiment().getExternalDevice('Tracking yPix', params.device.tracking.manufacturer),...
        struct2map(trackerParameters),...
        NumericData(data.Track.yPix(epochDescriptor.lfpStartIndex:epochDescriptor.lfpEndIndex)),...
        'pixel',... % TODO units
        'y-position',...
        data.xml.lfpSampleRate,...
        'Hz',...
        IResponseData.NUMERIC_DATA_UTI);
end